Tests for 0-add_integer module
add_integer will be used
===
Importing the module:
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2)
    100
    >>> add_integer(0, 0)
    0
    >>> add_integer("pizza", 12)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer("pizza")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(9, "pizza")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(9, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer(9, float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
    >>> add_integer(float('nan'), 9)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
    >>> add_integer(9, float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(9, float('-inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('-inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('-inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
