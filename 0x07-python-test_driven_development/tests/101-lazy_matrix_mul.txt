Tests for 101-matrix_mul.py
matrix_mul will be used
===
Importing module
>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])
>>> matrix_mul(9, [[]])
Traceback (most recent call last):
    ...
ValueError: Scalar operands are not allowed, use '*' instead
>>> matrix_mul([[1, 2], [2, 3]], 9)
Traceback (most recent call last):
    ...
ValueError: Scalar operands are not allowed, use '*' instead
>>> matrix_mul([1, 2], [1, 2])
5
>>> matrix_mul([[1, 2], [2, 3]], [1, 2])
array([5, 8])
>>> matrix_mul([], [])
0.0
>>> matrix_mul([[1, 2], [2, 3]], [])
Traceback (most recent call last):
    ...
ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)
>>> matrix_mul([["pizza", 2], [1, 2]], [[1, 2], [2, 1]])
Traceback (most recent call last):
    ...
TypeError: invalid data type for einsum
>>> matrix_mul([[1, 2], [1, 2]], [["pizza", 1], [1, 2]])
Traceback (most recent call last):
    ...
TypeError: invalid data type for einsum
>>> matrix_mul([[1, 2, 3], [1, 2]], [[2, 1], [2, 2]])
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.
>>> matrix_mul([[1, 2], [2, 3]], [[1, 2, 3, 4], [1, 2, 3]])
Traceback (most recent call last):
    ...
ValueError: setting an array element with a sequence.
>>> matrix_mul([[1, 2], [1, 2]], [[1, 2, 3], [1, 2, 3], [1, 2, 3]])
Traceback (most recent call last):
    ...
ValueError: shapes (2,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)
