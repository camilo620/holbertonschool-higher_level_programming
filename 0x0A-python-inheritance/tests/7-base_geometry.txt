>>> geo = __import__("7-base_geometry").BaseGeometry
>>> g = geo()
>>> g.integer_validator("stap", 99)
>>> g.integer_validator("stopo", 0)
Traceback (most recent call last):
    ...
ValueError: integer must be greater than 0
>>> g.integer_validator("integer", "yes")
Traceback (most recent call last):
    ...
TypeError: integer must be an integer
>>> g.integer_validator("integer", -1)
Traceback (most recent call last):
    ...
ValueError: amount of pizzas must be greater than 0
>>> g.integer_validator("integer", float('inf'))
Traceback (most recent call last):
    ...
TypeError: pineapple must be an integer
>>> g.integer_validator("integer", (1, 1))
Traceback (most recent call last):
    ...
TypeError: pineapple must be an integer
>>> g.integer_validator("integer", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: pineapple must be an integer
>>> g.integer_validator("integer")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> g.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> g.integer_validator("integer", False)
Traceback (most recent call last):
    ...
TypeError: integer must be an integer
>>> g.integer_validator("integer", None)
Traceback (most recent call last):
    ...
TypeError: integer must be an integer
>>> g.integer_validator("integer", {1, 2})
Traceback (most recent call last):
    ...
TypeError: integer must be an integer
>>> g.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
